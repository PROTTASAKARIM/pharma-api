/**
 * Suppliers API
 * 1. get all Suppliers
 * 2. get Supplier by id
 * 3. get Supplier by type
 * 4. create one
 * 5. create many
 * 6. updateOne
 * 7. delete one
 */
const express = require("express");
const router = express.Router();
const expressAsyncHandler = require("express-async-handler");
const jwt = require("jsonwebtoken");
const Supplier = require("../models/supplierModel");
const ProductTable = require("../models/productModel");
const checklogin = require("../middlewares/checkLogin");
const Product = require("../models/productModel");

const supplierRouter = express.Router();

// COUNT PRODUCT
supplierRouter.get(
  "/count",
  expressAsyncHandler(async (req, res) => {
    const total = await Supplier.countDocuments({});
    res.status(200).json(total);
  })
);

// GET ALL suppliers
supplierRouter.get(
  "/",
  expressAsyncHandler(async (req, res) => {
    const suppliers = await Supplier.find({
      status: "active",
    }).select({
      name: 1,
      email: 1,
      code: 1,
      company: 1,
      phone: 1,
      products: 1,
    });
    // .populate("products")
    // .populate({
    //   path: "products.id",
    //   populate: {
    //     path: "priceList",
    //     model: "Price",
    //   },
    // });
    // .exec();
    // .populate("Product.id");
    // .populate("Products.id", { name: 1, article_code: 1, priceList: 1 });
    res.send(suppliers);
    // // res.send('removed');
    console.log(suppliers);
  })
);

supplierRouter.get(
  "/export",
  expressAsyncHandler(async (req, res) => {
    const suppliers = await Supplier.find({
      status: "active",
    }).select({
      _id: 1,
      name: 1,
      code: 1,
      company: 1,
    });
    res.send(suppliers);
    console.log(suppliers);
  })
);

// GET Count suppliers
supplierRouter.get(
  "/count",
  expressAsyncHandler(async (req, res) => {
    const total = await Supplier.countDocuments({});
    // console.log("id");
    res.status(200).json(total);
  })
);

// GET ONE SUPPLIER FOR UPDATE
supplierRouter.get(
  "/test/:id",
  expressAsyncHandler(async (req, res) => {
    const id = req.params.id;
    try {
      const suppliers = await Supplier.findOne({
        _id: id,
        status: "active",
      })
        .select({
          name: 1,
          email: 1,
          code: 1,
          company: 1,
          phone: 1,
          products: 1,
        })
        .populate("products")
      let productId = []
      suppliers.products.map(pro => {
        productId = [...productId, pro.get("id")]
        // console.log(pro.get("id"))
      })
      // console.log(productId)
      console.log("Products in supplier", productId.length)
      // .populate({
      //   path: "products.id",
      //   model: "Product",
      //   populate: {
      //     path: "priceList",
      //     model: "Price",
      //   },
      // });
      const pp = [
        "551385",
        "5315571",
        "5318707",
        "5318708",
        "5318709",
        "5318710",
        "5414322",
        "5414323",
        "5414324",
        "5414327",
        "5414328",
        "5414329",
        "5414332",
        "5414333",
        "5414334",
        "5414335",
        "5414336",
        "5414338",
        "5414340",
        "5414341",
        "5414342",
        "5414343",
        "5414855",
        "5415056",
        "5415483",
        "5416059",
        "5417867",
        "5417905",
        "5418607",
        "5418706",
        "5514899",
        "5616123",
        "5710423",
        "5714918",
        "5715112",
        "5715113",
        "5715114",
        "5715126",
        "5715127",
        "5715128",
        "5715129",
        "5715130",
        "5715131",
        "5715132",
        "5715133",
        "5715134",
        "5715135",
        "5715136",
        "5715137",
        "5715138",
        "5715139",
        "5715140",
        "5715141",
        "5715142",
        "5715143",
        "5715144",
        "5715145",
        "5715146",
        "5715147",
        "5715148",
        "5715149",
        "5715150",
        "5715151",
        "5715152",
        "5715153",
        "5715154",
        "5715205",
        "5715206",
        "5715227",
        "5715268",
        "5715269",
        "5715270",
        "5715289",
        "5715348",
        "5715349",
        "5715350",
        "5715351",
        "5715414",
        "5715415",
        "5715416",
        "5715417",
        "5715539",
        "5716005",
        "5716006",
        "5716008",
        "5716009",
        "5718933",
        "5718934",
        "5718935",
        "5718936",
        "5718937",
        "5718938",
        "5718939",
        "5811932",
        "5811950",
        "5811952",
        "5811953",
        "5811991",
        "5811995",
        "5814708",
        "5814752",
        "5814794",
        "5814796",
        "5814797",
        "5815057",
        "5815115",
        "5815116",
        "5815117",
        "5815118",
        "5815119",
        "5815120",
        "5815121",
        "5815122",
        "5815123",
        "5815124",
        "5815125",
        "5815259",
        "5815260",
        "5815262",
        "5815263",
        "5815264",
        "5815265",
        "5815266",
        "5815267",
        "5815352",
        "5815353",
        "5815354",
        "5815355",
        "5815356",
        "5815357",
        "5815428",
        "5815429",
        "5815447",
        "5815479",
        "5815480",
        "5815540",
        "5815541",
        "5815542",
        "5815543",
        "5815544",
        "5815778",
        "5815852",
        "5815853",
        "5816007",
        "5817816",
        "5817817",
        "5817818",
        "5817819",
        "5817820",
        "5817821",
        "5817822",
        "5912877",
        "5912878",
        "5912879",
        "5912880",
        "5912881",
        "5912882",
        "5912883",
        "5912884",
        "5912885",
        "5912886",
        "5912887",
        "5912888",
        "5912889",
        "5912890",
        "5912891",
        "5912892",
        "5912893",
        "5912894",
        "5912895",
        "5912896",
        "5912897",
        "5912898",
        "5912899",
        "5912900",
        "5912901",
        "5912902",
        "5912903",
        "5912904",
        "5912905",
        "5912906",
        "5912907",
        "5912908",
        "5912909",
        "5912910",
        "5912911",
        "5912912",
        "5912913",
        "5912914",
        "5912915",
        "5912916",
        "5912917",
        "5912918",
        "5912919",
        "5912920",
        "5912921",
        "5912922",
        "5912923",
        "5912924",
        "5912925",
        "5912926",
        "5912927",
        "5912928",
        "5912929",
        "5912930",
        "5912931",
        "5912932",
        "5912933",
        "5912934",
        "5912935",
        "5912936",
        "5912937",
        "5912938",
        "5912939",
        "5912940",
        "5912941",
        "5912942",
        "5912943",
        "5912944",
        "5912945",
        "5912946",
        "5912947",
        "5912948",
        "5912949",
        "5912950",
        "5912951",
        "5912952",
        "5912953",
        "5912954",
        "5912955",
        "5912956",
        "5912957",
        "5912958",
        "5912959",
        "5912960",
        "5912961",
        "5912962",
        "5912963",
        "5912964",
        "5912965",
        "5912966",
        "5912967",
        "5912968",
        "5912969",
        "5912970",
        "5912971",
        "5912972",
        "5912973",
        "5912974",
        "5912975",
        "5912976",
        "5912977",
        "5912978",
        "5912979",
        "5912980",
        "5912981",
        "5912982",
        "5912983",
        "5912984",
        "5912985",
        "5912986",
        "5912987",
        "5912988",
        "5912989",
        "5912990",
        "5912991",
        "5912992",
        "5912993",
        "5912994",
        "5912995",
        "5912996",
        "5912997",
        "5912998",
        "5912999",
        "5913000",
        "5913001",
        "5913002",
        "5913003",
        "5913004",
        "5913005",
        "5913006",
        "5913007",
        "5913008",
        "5913009",
        "5913010",
        "5913011",
        "5913012",
        "5913013",
        "5913014",
        "5913015",
        "5913016",
        "5913017",
        "5913018",
        "5913019",
        "5913020",
        "5913021",
        "5913022",
        "5913023",
        "5913024",
        "5913025",
        "5913026",
        "5913027",
        "5913028",
        "5913029",
        "5913030",
        "5913031",
        "5913032",
        "5913033",
        "5913034",
        "5913035",
        "5913036",
        "5913037",
        "5913038",
        "5913039",
        "5913040",
        "5913041",
        "5913042",
        "5913043",
        "5913044",
        "5913045",
        "5913046",
        "5913047",
        "5913048",
        "5913049",
        "5913050",
        "5913051",
        "5913052",
        "5913053",
        "5913054",
        "5913055",
        "5913056",
        "5913057",
        "5913058",
        "5913059",
        "5913060",
        "5913061",
        "5913062",
        "5913063",
        "5913064",
        "5913065",
        "5913066",
        "5913067",
        "5913068",
        "5913069",
        "5913070",
        "5913071",
        "5913072",
        "5913073",
        "5913074",
        "5913075",
        "5913076",
        "5913077",
        "5913078",
        "5913079",
        "5913080",
        "5913081",
        "5913082",
        "5913083",
        "5913084",
        "5913085",
        "5913086",
        "5913087",
        "5913088",
        "5913089",
        "5913090",
        "5913091",
        "5913092",
        "5913093",
        "5913094",
        "5913095",
        "5913096",
        "5913097",
        "5913098",
        "5913099",
        "5913100",
        "5913101",
        "5913102",
        "5913103",
        "5913104",
        "5913105",
        "5913106",
        "5913107",
        "5913108",
        "5913109",
        "5913110",
        "5913111",
        "5913112",
        "5913113",
        "5913114",
        "5913115",
        "5913116",
        "5913117",
        "5913118",
        "5913119",
        "5913120",
        "5913121",
        "5913122",
        "5913123",
        "5913124",
        "5913125",
        "5913126",
        "5913127",
        "5913128",
        "5913129",
        "5913130",
        "5913131",
        "5913132",
        "5913133",
        "5913134",
        "5913135",
        "5913136",
        "5913137",
        "5913138",
        "5913139",
        "5913140",
        "5913141",
        "5913142",
        "5913143",
        "5913144",
        "5913145",
        "5913146",
        "5913147",
        "5913148",
        "5913149",
        "5913150",
        "5913151",
        "5913152",
        "5913153",
        "5913154",
        "5913155",
        "5913156",
        "5913157",
        "5913158",
        "5913159",
        "5913160",
        "5913161",
        "5913162",
        "5913163",
        "5913164",
        "5913165",
        "5913166",
        "5913167",
        "5913168",
        "5913169",
        "5913170",
        "5913171",
        "5913172",
        "5913173",
        "5913174",
        "5913175",
        "5913176",
        "5913177",
        "5913178",
        "5913179",
        "5913180",
        "5913181",
        "5913182",
        "5913183",
        "5913184",
        "5913185",
        "5913186",
        "5913187",
        "5913188",
        "5913189",
        "5913190",
        "5913191",
        "5913192",
        "5913193",
        "5913194",
        "5913195",
        "5913196",
        "5913197",
        "5913198",
        "5913199",
        "5913200",
        "5913201",
        "5913202",
        "5913203",
        "5913204",
        "5913205",
        "5913206",
        "5913207",
        "5913208",
        "5913209",
        "5913210",
        "5913211",
        "5913212",
        "5913213",
        "5913214",
        "5913215",
        "5913216",
        "5913217",
        "5913218",
        "5913219",
        "5913220",
        "5913221",
        "5913222",
        "5913223",
        "5913224",
        "5913225",
        "5913226",
        "5913227",
        "5913228",
        "5913229",
        "5913230",
        "5913231",
        "5913232",
        "5913233",
        "5913234",
        "5913235",
        "5913236",
        "5913237",
        "5913238",
        "5913239",
        "5913240",
        "5913241",
        "5913242",
        "5913243",
        "5913244",
        "5913245",
        "5913246",
        "5913247",
        "5913248",
        "5913249",
        "5913250",
        "5913251",
        "5913252",
        "5913253",
        "5913254",
        "5913255",
        "5913256",
        "5913257",
        "5913258",
        "5913259",
        "5913260",
        "5913261",
        "5913262",
        "5913263",
        "5913264",
        "5913265",
        "5913266",
        "5913267",
        "5913268",
        "5913269",
        "5913270",
        "5913271",
        "5913272",
        "5913273",
        "5913274",
        "5913275",
        "5913276",
        "5913277",
        "5913278",
        "5913279",
        "5913280",
        "5913281",
        "5913282",
        "5913283",
        "5913284",
        "5913285",
        "5913286",
        "5913287",
        "5913288",
        "5913289",
        "5913290",
        "5913291",
        "5913292",
        "5913293",
        "5913294",
        "5913295",
        "5913296",
        "5913297",
        "5913298",
        "5913299",
        "5913300",
        "5913301",
        "5913302",
        "5913303",
        "5913304",
        "5913305",
        "5913306",
        "5913307",
        "5913308",
        "5913309",
        "5913310",
        "5913311",
        "5913312",
        "5913313",
        "5913314",
        "5913315",
        "5913316",
        "5913317",
        "5913318",
        "5913319",
        "5913320",
        "5913321",
        "5913322",
        "5913323",
        "5913324",
        "5913325",
        "5913326",
        "5913327",
        "5913328",
        "5913329",
        "5913330",
        "5913331",
        "5913332",
        "5913333",
        "5913334",
        "5913335",
        "5913336",
        "5913337",
        "5913338",
        "5913339",
        "5913340",
        "5913341",
        "5913342",
        "5913343",
        "5913344",
        "5913345",
        "5913346",
        "5913347",
        "5913348",
        "5913349",
        "5913350",
        "5913351",
        "5913352",
        "5913353",
        "5913354",
        "5913355",
        "5913356",
        "5913357",
        "5913358",
        "5913359",
        "5913360",
        "5913361",
        "5913362",
        "5913363",
        "5913364",
        "5913365",
        "5913366",
        "5913367",
        "5913368",
        "5913369",
        "5913370",
        "5913371",
        "5913372",
        "5913373",
        "5913374",
        "5913375",
        "5913376",
        "5913377",
        "5913378",
        "5913379",
        "5913380",
        "5913381",
        "5913382",
        "5913383",
        "5913384",
        "5913385",
        "5913386",
        "5913387",
        "5913388",
        "5913389",
        "5913390",
        "5913391",
        "5913392",
        "5913393",
        "5913394",
        "5913395",
        "5913396",
        "5913397",
        "5913398",
        "5913399",
        "5913400",
        "5913401",
        "5913402",
        "5913403",
        "5913404",
        "5913405",
        "5913406",
        "5913407",
        "5913408",
        "5913409",
        "5913410",
        "5913411",
        "5913412",
        "5913413",
        "5913414",
        "5913415",
        "5913416",
        "5913417",
        "5913418",
        "5913419",
        "5913420",
        "5913421",
        "5913422",
        "5913423",
        "5913424",
        "5913425",
        "5913426",
        "5913427",
        "5913428",
        "5913429",
        "5913430",
        "5913431",
        "5913432",
        "5913433",
        "5913434",
        "5913435",
        "5913436",
        "5913437",
        "5913438",
        "5913439",
        "5913440",
        "5913441",
        "5913442",
        "5913443",
        "5913444",
        "5913445",
        "5913446",
        "5913447",
        "5913448",
        "5913449",
        "5913450",
        "5913451",
        "5913452",
        "5913453",
        "5913454",
        "5913455",
        "5913456",
        "5913457",
        "5913458",
        "5913459",
        "5913460",
        "5913461",
        "5913462",
        "5913463",
        "5913464",
        "5913465",
        "5913466",
        "5913467",
        "5913468",
        "5913469",
        "5913470",
        "5913471",
        "5913472",
        "5913473",
        "5913474",
        "5913475",
        "5913476",
        "5913477",
        "5913478",
        "5913479",
        "5913480",
        "5913481",
        "5913482",
        "5913483",
        "5913484",
        "5913485",
        "5913486",
        "5913487",
        "5913488",
        "5913489",
        "5913490",
        "5913491",
        "5913492",
        "5913493",
        "5913494",
        "5913495",
        "5913496",
        "5913497",
        "5913498",
        "5913499",
        "5913500",
        "5913501",
        "5913502",
        "5913503",
        "5913504",
        "5913505",
        "5913506",
        "5913507",
        "5913508",
        "5913509",
        "5913510",
        "5913511",
        "5913512",
        "5913513",
        "5913514",
        "5913515",
        "5913516",
        "5913517",
        "5913518",
        "5913519",
        "5913520",
        "5913521",
        "5913522",
        "5913523",
        "5913524",
        "5913525",
        "5913526",
        "5913527",
        "5913528",
        "5913529",
        "5913530",
        "5913531",
        "5913532",
        "5913533",
        "5913534",
        "5913535",
        "5913536",
        "5913537",
        "5913538",
        "5913539",
        "5913540",
        "5913541",
        "5913542",
        "5913543",
        "5913544",
        "5913545",
        "5913546",
        "5913547",
        "5913548",
        "5913549",
        "5913550",
        "5913551",
        "5913552",
        "5913553",
        "5913554",
        "5913555",
        "5913556",
        "5913557",
        "5913742",
        "5913743",
        "5913744",
        "5913745",
        "5913746",
        "5913747",
        "5913748",
        "5913749",
        "5913750",
        "5913751",
        "5913752",
        "5913753",
        "5913754",
        "5913755",
        "5913756",
        "5913757",
        "5913758",
        "5913759",
        "5913760",
        "5913761",
        "5913762",
        "5913763",
        "5913764",
        "5913765",
        "5913766",
        "5913767",
        "5913768",
        "5913769",
        "5913770",
        "5913771",
        "5913772",
        "5913773",
        "5913774",
        "5913775",
        "5913776",
        "5913777",
        "5913778",
        "5913779",
        "5913780",
        "5913781",
        "5913782",
        "5913783",
        "5913784",
        "5913785",
        "5913786",
        "5913787",
        "5913788",
        "5913789",
        "5913790",
        "5913791",
        "5913792",
        "5913793",
        "5913794",
        "5913795",
        "5913796",
        "5913797",
        "5913798",
        "5913799",
        "5913800",
        "5913801",
        "5913802",
        "5913803",
        "5913804",
        "5913805",
        "5913806",
        "5913807",
        "5913808",
        "5913809",
        "5913810",
        "5913811",
        "5913812",
        "5913813",
        "5913814",
        "5913815",
        "5913816",
        "5913817",
        "5913818",
        "5913819",
        "5913820",
        "5913821",
        "5913822",
        "5913823",
        "5913824",
        "5913825",
        "5913826",
        "5913827",
        "5913828",
        "5913829",
        "5913830",
        "5913831",
        "5913832",
        "5913833",
        "5913834",
        "5913835",
        "5913836",
        "5913837",
        "5913838",
        "5913839",
        "5913840",
        "5913841",
        "5913842",
        "5913843",
        "5913844",
        "5913845",
        "5913846",
        "5913847",
        "5913848",
        "5913849",
        "5913850",
        "5913851",
        "5913852",
        "5913853",
        "5913854",
        "5913855",
        "5913856",
        "5913857",
        "5913858",
        "5913859",
        "5913860",
        "5913861",
        "5913862",
        "5913863",
        "5913864",
        "5913865",
        "5913866",
        "5913867",
        "5913868",
        "5913869",
        "5913870",
        "5913871",
        "5913872",
        "5913873",
        "5913874",
        "5913875",
        "5913876",
        "5913877",
        "5913878",
        "5913879",
        "5913880",
        "5913881",
        "5913882",
        "5913883",
        "5913884",
        "5913885",
        "5913886",
        "5913887",
        "5913888",
        "5913889",
        "5913890",
        "5913891",
        "5913892",
        "5913893",
        "5913894",
        "5913895",
        "5913896",
        "5913897",
        "5913898",
        "5913899",
        "5913900",
        "5913901",
        "5913902",
        "5913903",
        "5913904",
        "5913905",
        "5913906",
        "5913907",
        "5913908",
        "5913909",
        "5913910",
        "5913911",
        "5913912",
        "5913913",
        "5913914",
        "5913915",
        "5913916",
        "5913917",
        "5913918",
        "5913919",
        "5913920",
        "5913921",
        "5913922",
        "5913923",
        "5913924",
        "5913925",
        "5913926",
        "5913927",
        "5913928",
        "5913929",
        "5913930",
        "5913931",
        "5913932",
        "5913933",
        "5913934",
        "5913935",
        "5913936",
        "5913937",
        "5913938",
        "5913939",
        "5913940",
        "5913941",
        "5913942",
        "5913943",
        "5913944",
        "5913945",
        "5913946",
        "5913947",
        "5913948",
        "5913949",
        "5913950",
        "5913951",
        "5913952",
        "5913953",
        "5913954",
        "5913955",
        "5913956",
        "5913957",
        "5913958",
        "5913959",
        "5913960",
        "5913961",
        "5913962",
        "5913963",
        "5913964",
        "5913965",
        "5913966",
        "5913967",
        "5913968",
        "5913969",
        "5913970",
        "5913971",
        "5913972",
        "5913973",
        "5913974",
        "5913975",
        "5913976",
        "5913977",
        "5913978",
        "5913979",
        "5913980",
        "5913981",
        "5913982",
        "5913983",
        "5913984",
        "5913985",
        "5913986",
        "5913987",
        "5913988",
        "5913989",
        "5913990",
        "5913991",
        "5913992",
        "5913993",
        "5913994",
        "5913995",
        "5913996",
        "5913997",
        "5913998",
        "5913999",
        "5914000",
        "5914001",
        "5914002",
        "5914003",
        "5914004",
        "5914005",
        "5914006",
        "5914007",
        "5914008",
        "5914009",
        "5914010",
        "5914011",
        "5914012",
        "5914013",
        "5914014",
        "5914015",
        "5914016",
        "5914017",
        "5914018",
        "5914019",
        "5914020",
        "5914021",
        "5914022",
        "5914023",
        "5914024",
        "5914025",
        "5914026",
        "5914027",
        "5914028",
        "5914029",
        "5914030",
        "5914031",
        "5914032",
        "5914033",
        "5914034",
        "5914035",
        "5914036",
        "5914037",
        "5914038",
        "5914039",
        "5914040",
        "5914041",
        "5914042",
        "5914043",
        "5914044",
        "5914045",
        "5914046",
        "5914047",
        "5914048",
        "5914049",
        "5914050",
        "5914051",
        "5914052",
        "5914053",
        "5914054",
        "5914055",
        "5914056",
        "5914057",
        "5914058",
        "5914059",
        "5914060",
        "5914061",
        "5914062",
        "5914063",
        "5914064",
        "5914065",
        "5914066",
        "5914067",
        "5914068",
        "5914069",
        "5914070",
        "5914071",
        "5914072",
        "5914073",
        "5914074",
        "5914075",
        "5914076",
        "5914077",
        "5914078",
        "5914079",
        "5914080",
        "5914081",
        "5914082",
        "5914083",
        "5914084",
        "5914085",
        "5914086",
        "5914087",
        "5914088",
        "5914089",
        "5914090",
        "5914091",
        "5914092",
        "5914093",
        "5914094",
        "5914095",
        "5914096",
        "5914097",
        "5914098",
        "5914099",
        "5914100",
        "5914101",
        "5914102",
        "5914103",
        "5914104",
        "5914105",
        "5914106",
        "5914107",
        "5914108",
        "5914109",
        "5914110",
        "5914111",
        "5914112",
        "5914113",
        "5914114",
        "5914115",
        "5914116",
        "5914117",
        "5914118",
        "5914119",
        "5914120",
        "5914121",
        "5914122",
        "5914123",
        "5914124",
        "5914125",
        "5914126",
        "5914127",
        "5914128",
        "5914129",
        "5914130",
        "5914131",
        "5914132",
        "5914133",
        "5914134",
        "5914135",
        "5914136",
        "5914137",
        "5914138",
        "5914139",
        "5914140",
        "5914141",
        "5914142",
        "5914143",
        "5914144",
        "5914145",
        "5914146",
        "5914147",
        "5914148",
        "5914149",
        "5914150",
        "5914151",
        "5914152",
        "5914153",
        "5914154",
        "5914155",
        "5914156",
        "5914157",
        "5914158",
        "5914159",
        "5914160",
        "5914161",
        "5914162",
        "5914163",
        "5914164",
        "5914165",
        "5914166",
        "5914167",
        "5914168",
        "5914169",
        "5914170",
        "5914171",
        "5914172",
        "5914173",
        "5914174",
        "5914175",
        "5914176",
        "5914177",
        "5914178",
        "5914179",
        "5914180",
        "5914181",
        "5914182",
        "5914183",
        "5914184",
        "5914185",
        "5914186",
        "5914187",
        "5914188",
        "5914189",
        "5914190",
        "5914191",
        "5914192",
        "5914193",
        "5914194",
        "5914195",
        "5914196",
        "5914197",
        "5914198",
        "5914199",
        "5914200",
        "5914201",
        "5914202",
        "5914203",
        "5914204",
        "5914205",
        "5914206",
        "5914207",
        "5914208",
        "5914209",
        "5914210",
        "5914211",
        "5914212",
        "5914213",
        "5914214",
        "5914215",
        "5914216",
        "5914217",
        "5914218",
        "5914219",
        "5914220",
        "5914221",
        "5914222",
        "5914223",
        "5914224",
        "5914225",
        "5914226",
        "5914227",
        "5914228",
        "5914229",
        "5914230",
        "5914231",
        "5914232",
        "5914233",
        "5914234",
        "5914235",
        "5914236",
        "5914237",
        "5914238",
        "5914239",
        "5914240",
        "5914241",
        "5914242",
        "5914243",
        "5914244",
        "5914245",
        "5914246",
        "5914247",
        "5914248",
        "5914249",
        "5914250",
        "5914251",
        "5914252",
        "5914253",
        "5914254",
        "5914255",
        "5914256",
        "5914257",
        "5914258",
        "5914259",
        "5914260",
        "5914261",
        "5914262",
        "5914263",
        "5914264",
        "5914265",
        "5914266",
        "5914267",
        "5914268",
        "5914269",
        "5914270",
        "5914271",
        "5914272",
        "5914273",
        "5914274",
        "5914275",
        "5914276",
        "5914277",
        "5914278",
        "5914279",
        "5914280",
        "5914281",
        "5914282",
        "5914283",
        "5914284",
        "5914285",
        "5914286",
        "5914287",
        "5914288",
        "5914289",
        "5914290",
        "5914291",
        "5914292",
        "5914293",
        "5914294",
        "5914295",
        "5914296",
        "5914297",
        "5914298",
        "5914299",
        "5914300",
        "5914301",
        "5914302",
        "5914303",
        "5914304",
        "5914305",
        "5914306",
        "5914307",
        "5914308",
        "5914309",
        "5914310",
        "5914311",
        "5914312",
        "5914313",
        "5914314",
        "5914315",
        "5914316",
        "5914317",
        "5914318",
        "5914319",
        "5914320",
        "5914321",
        "6112396",
        "6112397",
        "6112398",
        "6112399",
        "6112400",
        "6112401",
        "6112402",
        "6112403",
        "6112404",
        "6112405",
        "6112406",
        "6112407",
        "6112408",
        "6112409",
        "6112410",
        "6112411",
        "6112412",
        "6112413",
        "6112414",
        "6112415",
        "6112416",
        "6112417",
        "6112418",
        "6112419",
        "6112420",
        "6112421",
        "6112422",
        "6112423",
        "6112424",
        "6112425",
        "6112426",
        "6112427",
        "6112428",
        "6112429",
        "6112430",
        "6112431",
        "6112432",
        "6112433",
        "6112434",
        "6112435",
        "6112436",
        "6112437",
        "6112438",
        "6112439",
        "6112440",
        "6112441",
        "6112442",
        "6112443",
        "6112444",
        "6112445",
        "6112446",
        "6112447",
        "6112448",
        "6112449",
        "6112450",
        "6112451",
        "6112452",
        "6112453",
        "6112454",
        "6112455",
        "6112456",
        "6112457",
        "6112458",
        "6112459",
        "6112460",
        "6112461",
        "6112462",
        "6112463",
        "6112464",
        "6112465",
        "6112466",
        "6112467",
        "6112468",
        "6112469",
        "6112470",
        "6112471",
        "6112472",
        "6112473",
        "6112474",
        "6112475",
        "6112476",
        "6112477",
        "6112478",
        "6112479",
        "6112480",
        "6112481",
        "6112482",
        "6112483",
        "6112484",
        "6112485",
        "6112486",
        "6112487",
        "6112488",
        "6112489",
        "6112490",
        "6112491",
        "6112492",
        "6112493",
        "6112494",
        "6112495",
        "6112496",
        "6112497",
        "6112498",
        "6112499",
        "6112500",
        "6112501",
        "6112502",
        "6112503",
        "6112504",
        "6112505",
        "6112506",
        "6112507",
        "6112508",
        "6112509",
        "6112510",
        "6112511",
        "6112512",
        "6112513",
        "6112514",
        "6112515",
        "6112516",
        "6112517",
        "6112518",
        "6112519",
        "6112520",
        "6112521",
        "6112522",
        "6112523",
        "6112524",
        "6112525",
        "6112526",
        "6112527",
        "6112528",
        "6112529",
        "6112530",
        "6112531",
        "6112532",
        "6112533",
        "6112534",
        "6112535",
        "6112536",
        "6112537",
        "6112538",
        "6112539",
        "6112540",
        "6112541",
        "6112542",
        "6112543",
        "6112544",
        "6112545",
        "6112546",
        "6112547",
        "6112548",
        "6112549",
        "6112550",
        "6112551",
        "6112552",
        "6112553",
        "6112554",
        "6112555",
        "6112556",
        "6112557",
        "6112558",
        "6112559",
        "6112560",
        "6112561",
        "6112562",
        "6112563",
        "6112564",
        "6112565",
        "6112566",
        "6112567",
        "6112568",
        "6112569",
        "6112570",
        "6112571",
        "6112572",
        "6112573",
        "6112574",
        "6112575",
        "6112576",
        "6112577",
        "6112578",
        "6112579",
        "6112580",
        "6112581",
        "6112582",
        "6112583",
        "6112584",
        "6112585",
        "6112586",
        "6112587",
        "6112588",
        "6112589",
        "6112590",
        "6112591",
        "6112592",
        "6112593",
        "6112594",
        "6112595",
        "6112596",
        "6112597",
        "6112598",
        "6112599",
        "6112600",
        "6112601",
        "6112602",
        "6112603",
        "6112604",
        "6112605",
        "6112606",
        "6112607",
        "6112608",
        "6112609",
        "6112610",
        "6112611",
        "6112612",
        "6112613",
        "6112614",
        "6112615",
        "6112616",
        "6112617",
        "6112618",
        "6112619",
        "6112620",
        "6112621",
        "6112622",
        "6112623",
        "6112624",
        "6112625",
        "6112626",
        "6112627",
        "6112628",
        "6112629",
        "6112630",
        "6112631",
        "6112632",
        "6112633",
        "6112634",
        "6112635",
        "6112636",
        "6112637",
        "6112638",
        "6112639",
        "6112640",
        "6112641",
        "6112642",
        "6112643",
        "6112644",
        "6112645",
        "6112646",
        "6112647",
        "6112648",
        "6112649",
        "6112650",
        "6112651",
        "6112652",
        "6112653",
        "6112654",
        "6112655",
        "6112656",
        "6112657",
        "6112658",
        "6112659",
        "6112660",
        "6112661",
        "6112662",
        "6112663",
        "6112664",
        "6112665",
        "6112666",
        "6112667",
        "6112668",
        "6112669",
        "6112670",
        "6112671",
        "6112672",
        "6112673",
        "6112674",
        "6112675",
        "6112676",
        "6112677",
        "6112678",
        "6112679",
        "6112680",
        "6112681",
        "6112682",
        "6112683",
        "6112684",
        "6112685",
        "6112686",
        "6112687",
        "6112688",
        "6112689",
        "6112690",
        "6112691",
        "6112692",
        "6112693",
        "6112694",
        "6112695",
        "6112696",
        "6112697",
        "6112698",
        "6112699",
        "6112700",
        "6112701",
        "6112702",
        "6112703",
        "6112704",
        "6112705",
        "6112706",
        "6112707",
        "6112708",
        "6112709",
        "6112710",
        "6112711",
        "6112712",
        "6112713",
        "6112714",
        "6112715",
        "6112716",
        "6112717",
        "6112718",
        "6112719",
        "6112720",
        "6112721",
        "6112722",
        "6112723",
        "6112724",
        "6112725",
        "6112726",
        "6112727",
        "6112728",
        "6112729",
        "6112730",
        "6112731",
        "6112732",
        "6112733",
        "6112734",
        "6112735",
        "6112736",
        "6112737",
        "6112738",
        "6112739",
        "6112740",
        "6112741",
        "6112742",
        "6112743",
        "6112744",
        "6112745",
        "6112746",
        "6112747",
        "6112748",
        "6112749",
        "6112750",
        "6112751",
        "6112752",
        "6112753",
        "6112754",
        "6112755",
        "6112756",
        "6112757",
        "6112758",
        "6112759",
        "6112760",
        "6112761",
        "6112762",
        "6112763",
        "6112764",
        "6112765",
        "6112766",
        "6112767",
        "6112768",
        "6112769",
        "6112770",
        "6112771",
        "6112772",
        "6112773",
        "6112774",
        "6112775",
        "6112776",
        "6112777",
        "6112778",
        "6112779",
        "6112780",
        "6112781",
        "6112782",
        "6112783",
        "6112784",
        "6112785",
        "6112786",
        "6112787",
        "6112788",
        "6112789",
        "6112790",
        "6112791",
        "6112792",
        "6112793",
        "6112794",
        "6112795",
        "6112796",
        "6112797",
        "6112798",
        "6112799",
        "6112800",
        "6112801",
        "6112802",
        "6112803",
        "6112804",
        "6112805",
        "6112806",
        "6112807",
        "6112808",
        "6112809",
        "6112810",
        "6112811",
        "6112812",
        "6112813",
        "6112814",
        "6112815",
        "6112816",
        "6112817",
        "6112818",
        "6112819",
        "6112820",
        "6112821",
        "6112822",
        "6112823",
        "6112824",
        "6112825",
        "6112826",
        "6112827",
        "6112828",
        "6112829",
        "6112830",
        "6112831",
        "6112832",
        "6112833",
        "6112834",
        "6112835",
        "6112836",
        "6112837",
        "6112838",
        "6112839",
        "6112840",
        "6112841",
        "6112842",
        "6112843",
        "6112844",
        "6112845",
        "6112846",
        "6112847",
        "6112848",
        "6112849",
        "6112850",
        "6112851",
        "6112852",
        "6112853",
        "6112854",
        "6112855",
        "6112856",
        "6112857",
        "6112858",
        "6112859",
        "6112860",
        "6112861",
        "6112862",
        "6112863",
        "6112864",
        "6112865",
        "6112866",
        "6112867",
        "6112868",
        "6112869",
        "6112870",
        "6112871",
        "6112872",
        "6112873",
        "6112874",
        "6112875",
        "6112876",
        "6113558",
        "6113559",
        "6113560",
        "6113561",
        "6113562",
        "6113563",
        "6113564",
        "6113565",
        "6113566",
        "6113567",
        "6113568",
        "6113569",
        "6113570",
        "6113571",
        "6113572",
        "6113573",
        "6113574",
        "6113575",
        "6113576",
        "6113577",
        "6113578",
        "6113579",
        "6113580",
        "6113581",
        "6113582",
        "6113583",
        "6113584",
        "6113585",
        "6113586",
        "6113587",
        "6113588",
        "6113589",
        "6113590",
        "6113591",
        "6113592",
        "6113593",
        "6113594",
        "6113595",
        "6113596",
        "6113597",
        "6113598",
        "6113599",
        "6113600",
        "6113601",
        "6113602",
        "6113603",
        "6113604",
        "6113605",
        "6113606",
        "6113607",
        "6113608",
        "6113609",
        "6113610",
        "6113611",
        "6113612",
        "6113613",
        "6113614",
        "6113615",
        "6113616",
        "6113617",
        "6113618",
        "6113619",
        "6113620",
        "6113621",
        "6113622",
        "6113623",
        "6113624",
        "6113625",
        "6113626",
        "6113627",
        "6113628",
        "6113629",
        "6113630",
        "6113631",
        "6113632",
        "6113633",
        "6113634",
        "6113635",
        "6113636",
        "6113637",
        "6113638",
        "6113639",
        "6113640",
        "6113641",
        "6113642",
        "6113643",
        "6113644",
        "6113645",
        "6113646",
        "6113647",
        "6113648",
        "6113649",
        "6113650",
        "6113651",
        "6113652",
        "6113653",
        "6113654",
        "6113655",
        "6113656",
        "6113657",
        "6113658",
        "6113659",
        "6113660",
        "6113661",
        "6113662",
        "6113663",
        "6113664",
        "6113665",
        "6113666",
        "6113667",
        "6113668",
        "6113669",
        "6113670",
        "6113671",
        "6113672",
        "6113673",
        "6113674",
        "6113675",
        "6113676",
        "6113677",
        "6113678",
        "6113679",
        "6113680",
        "6113681",
        "6113682",
        "6113683",
        "6113684",
        "6113685",
        "6113686",
        "6113687",
        "6113688",
        "6113689",
        "6113690",
        "6113691",
        "6113692",
        "6113693",
        "6113694",
        "6113695",
        "6113696",
        "6113697",
        "6113698",
        "6113699",
        "6113700",
        "6113701",
        "6113702",
        "6113703",
        "6113704",
        "6113705",
        "6113706",
        "6113707",
        "6113708",
        "6113709",
        "6113710",
        "6113711",
        "6113712",
        "6113713",
        "6113714",
        "6113715",
        "6113716",
        "6113717",
        "6113718",
        "6113719",
        "6113720",
        "6113721",
        "6113722",
        "6113723",
        "6113724",
        "6113725",
        "6113726",
        "6113727",
        "6113728",
        "6113729",
        "6113730",
        "6113731",
        "6113732",
        "6113733",
        "6113734",
        "6113735",
        "6113736",
        "6113737",
        "6113738",
        "6113739",
        "6113740",
        "6113741",
        "6315418",
        "6315419",
        "6315420",
        "6515058",
        "6515059",
        "6515060",
        "6515061",
        "6515062",
        "6515682",
        "6515683",
        "6517800",
        "6517801",
        "6518685",
        "6518686",
        "6518687",
        "6518688",
        "6518689",
        "6518819",
        "6518820",
        "6715221",
        "6715484",
        "6715485",
        "6715486",
        "6715487",
        "6715488",
        "6715489",
        "6715490",
        "6715491",
        "6715492",
        "6715494",
        "6715495",
        "6715496",
        "6715497",
        "6715498",
        "6715726",
        "6718690",
        "6718691",
        "6718692",
        "6915493",
      ]

      const productFind = await ProductTable.find({ article_code: pp }).select({
        article_code: 1
      })
      // console.log("productFind", productFind)
      console.log("productFind", productFind.length)

      res.send(productFind);
      // console.log("removed");
      // console.log(suppliers);
    } catch (err) {
      res.send(err);
    }
  })
);
// GET ONE SUPPLIER FOR UPDATE
supplierRouter.get(
  "/:id",
  expressAsyncHandler(async (req, res) => {
    const id = req.params.id;
    try {
      let suppliers = await Supplier.find({
        _id: id,
        status: "active",
      })
        .select({
          name: 1,
          email: 1,
          code: 1,
          company: 1,
          phone: 1,
          products: 1,
        })
      // .populate("products")
      // .populate({
      //   path: "products.id",
      //   model: "Product",
      //   populate: {
      //     path: "priceList",
      //     model: "Price",
      //   },
      // });
      const products = suppliers[0].products
      // console.log("products", products)
      let p_article = []
      products.map(pro => {
        p_article = [...p_article, pro.get("article_code")]
      })
      console.log("p_article", p_article)
      const findProducts = await Product.find({ article_code: p_article }).select({
        article_code: 1
      })
      // console.log("final", findProducts.length)
      let finalProduct = []
      findProducts.map(pro => {
        const pp = products.filter(p => p.get("article_code") === pro.article_code)
        finalProduct = [...finalProduct, pp[0]]
      })
      console.log("b", products)
      console.log("a", finalProduct)

      console.log("suppliers", suppliers[0]);
      const newSupplier = { ...suppliers[0].toObject(), products: finalProduct }
      console.log("newProduct", newSupplier)
      const populatedSupplier = await Supplier.populate(newSupplier, {
        path: "products.id",
        model: "Product",
        populate: {
          path: "priceList",
          model: "Price",
        },
      });
      console.log("populatedS", populatedSupplier)

      res.send(populatedSupplier);
      // console.log("removed");
    } catch (err) {
      res.send(err);
    }
  })
);
// GET ONE SUPPLIER FOR UPDATE
supplierRouter.get(
  "/testnew/:id",
  expressAsyncHandler(async (req, res) => {
    const id = req.params.id;
    try {
      const suppliers = await Supplier.find({
        _id: id,
        status: "active",
      })
        .select({
          name: 1,
          email: 1,
          code: 1,
          company: 1,
          phone: 1,
          products: 1,
        })
        .populate("products")
        .populate({
          path: "products.id",
          model: "Product",
          populate: {
            path: "priceList",
            model: "Price",
          },
        });

      res.send(suppliers[0]);
      // console.log("removed");
      // console.log(suppliers);
    } catch (err) {
      res.send(err);
    }
  })
);

// GET ONE SUPPLIER BY ID
supplierRouter.get(
  "/update/:id",
  expressAsyncHandler(async (req, res) => {
    const id = req.params.id;
    try {
      const suppliers = await Supplier.find({
        _id: id,
        status: "active",
      }).select({
        name: 1,
        email: 1,
        code: 1,
        company: 1,
        phone: 1,
        products: 1,
      });
      // .populate("products")
      // .populate({
      //   path: "products.id",
      //   model: "Product",
      //   depopulate: {
      //     path: "priceList",
      //     model: "Price",
      //   },
      // });
      // populate();
      // }).populate("Product.id", "name", "ean", "article_code", "unit");
      // console.log(suppliers[0].products.length > 0);
      // suppliers[0].products.length > 0 &&
      //   (await suppliers.populate("products").populate({
      //     path: "products.id",
      //     model: "Product",
      //     populate: {
      //       path: "priceList",
      //       model: "Price",
      //     },
      //   }));

      res.send(suppliers[0]);
      console.log("removed");
      // console.log(suppliers);
    } catch (err) {
      res.send(err);
    }
  })
);

// GET suppliers by Product article_code
supplierRouter.get(
  "/product/:code",
  expressAsyncHandler(async (req, res) => {
    const code = req.params.code;
    const suppliers = await Supplier.find({
      // _id: id,
      status: "active",
    });
    // console.log(code);
    // }).populate("Product.id", "name", "ean", "article_code", "unit");
    res.send(suppliers);
    // // res.send('removed');
    console.log(suppliers.name);
  })
);

// CREATE ONE Supplier
supplierRouter.post(
  "/",
  expressAsyncHandler(async (req, res) => {
    const newSupplier = new Supplier(req.body);
    try {
      await newSupplier.save();
      res.status(200).json({
        message: "Supplier is created Successfully",
      });
    } catch (err) {
      res
        .status(500)
        .json({ message: "There was a server side error", error: err });
    }
  })
);

// CREATE MULTI suppliers
supplierRouter.post(
  "/all",
  expressAsyncHandler(async (req, res) => {
    await Supplier.insertMany(req.body, (err) => {
      if (err) {
        res.status(500).json({ error: err });
      } else {
        res.status(200).json({
          message: "suppliers are created Successfully",
        });
      }
    });
  })
);

// UPDATE ONE Supplier
supplierRouter.put(
  "/:id",
  expressAsyncHandler(async (req, res) => {
    const id = req.params.id;
    const update = req.body;
    console.log(req.body);
    const products = update.products
    console.log(products)
    let p_article = []
    products.map(pro => {
      p_article = [...p_article, pro.article_code]
    })
    const findProducts = await Product.find({ article_code: p_article }).select({
      article_code: 1
    })
    console.log(findProducts)
    let finalProduct = []
    findProducts.map(pro => {
      const pp = products.filter(p => p.article_code === pro.article_code)
      finalProduct = [...finalProduct, pp[0]]
    })
    console.log("b", products.length)
    console.log("a", finalProduct.length)
    req.body.products = finalProduct
    console.log("re.body", req.body)
    const newUpdated = req.body
    try {
      await Supplier.updateOne({ _id: id }, { $set: newUpdated })
        .then((response) => {
          res.send(response);
        })
        .catch((err) => {
          res.send(err);
        });
    } catch (error) {
      console.error(error);
    }
  })
);

// DELETE ONE Supplier
supplierRouter.delete(
  "/:id",
  expressAsyncHandler(async (req, res) => {
    const id = req.params.id;
    try {
      await Supplier.deleteOne({ _id: id })
        .then((response) => {
          res.send(response);
        })
        .catch((err) => {
          res.send(err);
        });
    } catch (error) {
      console.error(error);
    }
  })
);

// GET ALL GRN WITH PAGENATION & SEARCH
supplierRouter.get(
  "/:page/:size",
  expressAsyncHandler(async (req, res) => {
    const page = parseInt(req.params.page);
    const size = parseInt(req.params.size);
    const queryString = req.query?.q?.trim().toString().toLocaleLowerCase();
    const currentPage = page + 0;

    let query = {};
    let suppliers = [];
    // const size = parseInt(req.query.size);
    // console.log("page:", currentPage, "size:", size, "search:", queryString);
    // console.log(typeof queryString);

    //check if search or the pagenation

    if (queryString) {
      // console.log("== query");

      console.log("search:", query);
      // query = { grnNo: { $regex: new RegExp(queryString + ".*?", "i") } };
      // search check if num or string
      const isNumber = /^\d/.test(queryString);
      console.log(isNumber);
      if (!isNumber) {
        // if text then search name
        // query = { name:  queryString  };
        query = { company: { $regex: RegExp(queryString + ".*", "i") } };
      } else {
        // if number search in ean and article code
        query = {
          $or: [
            { code: { $regex: RegExp("^" + queryString + ".*", "i") } },
            { phone: { $regex: RegExp("^" + queryString + ".*", "i") } },
          ],
        };
      }
      // console.log(query);

      suppliers = await Supplier.find(query)
        .select({
          name: 1,
          email: 1,
          code: 1,
          company: 1,
          phone: 1,
        })
        .limit(50);
      // .populate("userId", "name")
      // .populate("poNo", "poNo")
      // // .populate("supplier", { company: 1, email: 1, phone: 1, address: 1 })
      // .populate("warehouse", "name");
      res.status(200).json(suppliers);
    } else {
      console.log("no query");

      // regular pagination
      query = {};

      suppliers = await Supplier.find(query).select({
        name: 1,
        email: 1,
        code: 1,
        company: 1,
        phone: 1,
      });
      // .limit(size)
      // .skip(size * page)
      // .populate("warehouse", "name");
      res.status(200).json(suppliers);
      console.log("done:", query);
    }
  })
);

module.exports = supplierRouter;
